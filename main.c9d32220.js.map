{"version":3,"sources":["scripts/main.js"],"names":["tableHead","document","querySelector","tableBody","addEventListener","e","tableCeil","sorted","target","columnforSort","children","indexOf","getString","value","innerText","getSalary","slice","split","join","callbackForNumbers","a","b","rows","sort","callbackForString","localeCompare","forEach","item","append"],"mappings":";AAAA,aAKA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAHA,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAYF,SAASC,cAAc,SAEzCF,EAAUI,iBAAiB,QAAS,SAAAC,GAC5BC,IAEFC,EAFED,EAAYD,EAAEG,OACdC,EAAgB,EAAIT,EAAUU,SAAS,GAAGA,UAAUC,QAAQL,GAGzDM,SAAAA,EAAUC,GACVA,OAAAA,EAAMH,SAASD,GAAeK,UAG9BC,SAAAA,EAAUF,GACVD,OAAAA,EAAUC,GAAOG,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAO1CC,SAAAA,EAAmBC,EAAGC,GACtB,OAACD,GAAKC,EAGPf,OAAAA,EAAUQ,WACX,IAAA,OACA,IAAA,WACHP,EAAS,EAAIJ,EAAUmB,MAAMC,KAC3B,SAACH,EAAGC,GAAMG,OAZPA,SAAkBJ,EAAGC,GACrBD,OAAAA,EAAEK,cAAcJ,GAWTG,CAAkBZ,EAAUQ,GAAIR,EAAUS,MAEtD,MAEG,IAAA,MACHd,EAAS,EAAIJ,EAAUmB,MAAMC,KAC3B,SAACH,EAAGC,GAAMF,OAAAA,EAAmBP,EAAUQ,GAAIR,EAAUS,MAEvD,MAEG,IAAA,SACHd,EAAS,EAAIJ,EAAUmB,MAAMC,KAC3B,SAACH,EAAGC,GAAMF,OAAAA,EAAmBJ,EAAUK,GAAIL,EAAUM,MAK3Dd,EAAOmB,QAAQ,SAAAC,GAAQxB,OAAAA,EAAUyB,OAAOD","file":"main.c9d32220.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\n\ntableHead.addEventListener('click', e => {\n  const tableCeil = e.target;\n  const columnforSort = [...tableHead.children[0].children].indexOf(tableCeil);\n  let sorted;\n\n  function getString(value) {\n    return value.children[columnforSort].innerText;\n  }\n\n  function getSalary(value) {\n    return getString(value).slice(1).split(',').join('');\n  }\n\n  function callbackForString(a, b) {\n    return a.localeCompare(b);\n  }\n\n  function callbackForNumbers(a, b) {\n    return +a - +b;\n  }\n\n  switch (tableCeil.innerText) {\n    case 'Name':\n    case 'Position':\n      sorted = [...tableBody.rows].sort(\n        (a, b) => callbackForString(getString(a), getString(b))\n      );\n      break;\n\n    case 'Age':\n      sorted = [...tableBody.rows].sort(\n        (a, b) => callbackForNumbers(getString(a), getString(b))\n      );\n      break;\n\n    case 'Salary':\n      sorted = [...tableBody.rows].sort(\n        (a, b) => callbackForNumbers(getSalary(a), getSalary(b))\n      );\n      break;\n  }\n\n  sorted.forEach(item => tableBody.append(item));\n});\n"]}